name: Lydia Excavator

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */3 * * *"

jobs:
  excavate:
    name: Excavate
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: "Ryanjiena/Lydia"
          ref: "main"
          token: ${{ secrets.GH_TOKEN }}
      - name: Excavator
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          # SKIP_UPDATED: '1'
        run: |
          $env:SCOOP = Join-Path $env:USERPROFILE 'SCOOP'
          $env:SCOOP_HOME = Join-Path $env:SCOOP 'apps\scoop\current'
          $env:SCOOP_GLOBAL = Join-Path $env:SystemDrive 'SCOOP'
          $env:SCOOP_DEBUG = 1
          $REPOSITORY = 'Ryanjiena/Lydia'
          $BUCKET_ROOT = $env:GITHUB_WORKSPACE
          $BINARIES_FOLDER = Join-Path $env:SCOOP_HOME 'bin'
          $MANIFESTS_LOCATION = Join-Path $BUCKET_ROOT 'bucket'
          $_BRANCH = 'main'
          $email = '78083448+JaimeZeng@users.noreply.github.com'
          $user = 'JaimeZeng[bot]'
          $rem = "https://${env:GITHUB_ACTOR}:$env:GITHUB_TOKEN@github.com/Ryanjiena/Lydia.git"
          Write-Host "Config git"
          git config --global user.name $user
          git config --global user.email $email
          git remote 'set-url' --push origin $rem
          Write-Host 'Installing scoop'
          $f = Join-Path $env:USERPROFILE 'install.ps1'
          Invoke-WebRequest 'https://raw.githubusercontent.com/ScoopInstaller/Install/master/install.ps1' -UseBasicParsing -OutFile $f
          & $f -RunAsAdmin
          Write-Host 'Importing all modules'
          # Load all scoop's modules.
          # Dot sourcing needs to be done on highest scope possible to propagate into lower scopes
          Get-ChildItem (Join-Path $env:SCOOP_HOME 'lib') '*.ps1' | ForEach-Object { . $_.FullName }
          $params = @{
              'Dir'          = $MANIFESTS_LOCATION
              'Upstream'     = "${REPOSITORY}:${_BRANCH}"
              'OriginBranch' = $_BRANCH
              'Push'         = $true
              'SkipUpdated'  = ($env:SKIP_UPDATED -eq '1')
          }
          $env:SCOOP_GH_TOKEN = $env:GITHUB_TOKEN
          # Set-PSDebug -Trace 2
          Write-Host ''
          Write-Host ''
          & (Join-Path $BINARIES_FOLDER 'auto-pr.ps1') @params
          Write-Host 'Scheduled finished'
  git-sync:
    name: Sync
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: excavate
    steps:
      - name: Import ssh private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" | sed 's/\\n/\n/g' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Build
        env:
          github_token: ${{ secrets.GH_TOKEN }}
        run: |
          #!/usr/bin/env bash
          PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin
          export PATH
          # set -euxo pipefail

          DATE="$(echo $(TZ=UTC date '+%Y-%m-%d %H:%M:%S'))"
          USER=$(whoami)
          TMP_DIR="${TMP_DIR:-$(mktemp -d /tmp/breathe.XXXX)}"
          LOG_FILE="${LOG_FILE:-${TMP_DIR}/build.log}"
          
          git config --global user.email "43134606+Ryanjiena@users.noreply.github.com"
          git config --global user.name "Ryanjiena"
          git clone -q --depth=1 --branch="main" "https://Ryanjiena:${github_token}@github.com/Ryanjiena/Lydia.git" "${TMP_DIR}/lydia"

          git config --global user.name "Ryanjie"
          git config --global user.email "4646-Ryanjie@users.noreply.test50k.gitlab.cn"
          git config --global core.sshCommand "/usr/bin/ssh -i ~/.ssh/id_rsa"
          # https://stackoverflow.com/questions/13363553/git-error-host-key-verification-failed-when-connecting-to-remote-repository/13364116#13364116
          # ssh-keygen -R jihulab.com
          ssh-keyscan -t rsa jihulab.com >> ~/.ssh/known_hosts
          git clone -q --depth=1 git@jihulab.com:Ryanjie/Lydia.git "${TMP_DIR}/lydia-cn"

          cd "${TMP_DIR}/lydia-cn/"
          if [ -d "bucket" ]; then
              rm -rf bin bucket scripts
          fi
          mkdir bin bucket scripts

          cp ${TMP_DIR}/lydia/bin/* ${TMP_DIR}/lydia-cn/bin/ -f
          cp ${TMP_DIR}/lydia/bucket/* ${TMP_DIR}/lydia-cn/bucket/ -f
          cp ${TMP_DIR}/lydia/scripts/* ${TMP_DIR}/lydia-cn/scripts/ -r -f
          cp ${TMP_DIR}/lydia/README.md ${TMP_DIR}/lydia-cn/README.md -f

          cd ${TMP_DIR}/lydia-cn/
          if [ "$(git status -sb)" == "## main...origin/main" ];then
            echo -e "\033[42;30m nothing to commit, working tree clean~ \033[0m"
          else
            git status -s && git pull origin main && git add . && git commit -m "Sync by: ${USER}, at: ${DATE}" && git push origin main
          fi

      - name: Remove ssh private key
        run: rm -f ~/.ssh/id_rsa
        